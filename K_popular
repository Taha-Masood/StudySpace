#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Tue Feb  6 13:03:32 2018
@author: benshaw

"""

# The run time of my function is O(n^2) in the worst case scinario, 
# that all of the names are different in the list.
# The average run time for my funcion is also about O(n^2)

def k_popular(list,k):
    x= {}# as a decleration this is a O(1) time complexity opperation
    for i in list:# a itteration opperation is O(n) complexity, as the program goes through each element of the list and preforms an opperation on it
        if i in x:# this if statment compares if "i is in x", and therefore it has a time complexity of O(n) as well 
            x[i]+=1# variable decleration, O(1)
        else:
            x[i]=1# variable decleration, O(1)
    
    popular = sorted(x, key=x.get, reverse=True)# The decleration and the .get function have a time of O(1), but the sorted function is O(nlogn) due to the nature of sorting algorithims
    Kth_name = popular[:k] # variable decleration of O(1) complexity
    return(Kth_name)
# So the total equation of runtime for my function is O(n^2) 
# in the worst case and average scinario, and in the best 
# scinario the run time is O(nlogn)




    